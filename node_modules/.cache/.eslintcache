[{"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\index.js":"1","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\App.js":"2","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Home.js":"5","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Profile.js":"6","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Signup.js":"7","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Signin.js":"8","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\CreatePost.js":"9","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\landing-page.js":"10","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\reducers\\userReducer.js":"11","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\SignIn.js":"12","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\postview.js":"13"},{"size":540,"mtime":1658923411867,"results":"14","hashOfConfig":"15"},{"size":1042,"mtime":1658923399875,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1658633119927,"results":"17","hashOfConfig":"15"},{"size":653,"mtime":1658914614810,"results":"18","hashOfConfig":"15"},{"size":538,"mtime":1658913162602,"results":"19","hashOfConfig":"15"},{"size":2235,"mtime":1658839518688,"results":"20","hashOfConfig":"15"},{"size":1832,"mtime":1658913175609,"results":"21","hashOfConfig":"15"},{"size":1824,"mtime":1658827622233,"results":"22","hashOfConfig":"15"},{"size":3354,"mtime":1658912344984,"results":"23","hashOfConfig":"15"},{"size":530,"mtime":1658923424807,"results":"24","hashOfConfig":"15"},{"size":168,"mtime":1658736908965,"results":"25","hashOfConfig":"15"},{"size":2153,"mtime":1658913172771,"results":"26","hashOfConfig":"15"},{"size":1321,"mtime":1658913169840,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zxrsy",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\index.js",[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\App.js",[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Home.js",[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Profile.js",[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Signup.js",["72","73"],[],"import { useState } from 'react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport M from 'materialize-css';\r\n\r\nconst Signup = ()=>{\r\n    // const history = useHistory()\r\nconst [name, setName] = useState(\"\")\r\nconst [email, setEmail] = useState(\"\")\r\nconst [password, setPassword] = useState(\"\")\r\nconst PostData = ()=>{\r\n\r\n    if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n        M.toast({html:\"invalid email\"})\r\n        return\r\n    }\r\n  \r\n\r\n    fetch(\"http://localhost:5000/signup\",{\r\n        method:\"POST\",\r\n        headers:{\r\n             \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            name,\r\n            email,\r\n            password\r\n        })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n        if(data.error){\r\n            M.toast({html:data.error, classes:\"#d50000 red accent-4\"})\r\n        }else{\r\n            M.toast({html:data.message,classes:\"#2e7d32 green darken-3\"})\r\n            // history.push(\"/signin\")\r\n        }\r\n   \r\n    }).catch(err=>{\r\n        console.log(err);\r\n    })\r\n    \r\n}\r\n\r\n    return(\r\n<div className='mycard'>\r\n<div className='card auth-card'>\r\n    <h2>Instaclone</h2>\r\n    <input type=\"text\" placeholder=\"name\"  value={name} onChange={(e)=>setName(e.target.value)} />\r\n    <input type=\"text\" placeholder=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n    <input type=\"password\" placeholder=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n\r\n    <button className='btn waves-effect waves-light'onClick={()=>PostData()}>Signup</button>\r\n\r\n<h5>\r\n    <Link to=\"signin\">Alredy have an account?</Link>\r\n</h5>\r\n</div>\r\n</div>\r\n)\r\n}\r\nexport default Signup;","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\Signin.js",["74","75"],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\CreatePost.js",["76"],[],"import React, { useState, useEffect } from \"react\";\r\nimport M from 'materialize-css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Createpost = ()=> {\r\n    const navigate = useNavigate();\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n   \r\n   \r\n    useEffect(() => {\r\n        if (url) {\r\n            fetch(\"/createpost\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    description,\r\n                    pic:url\r\n\r\n                })\r\n            })\r\n                .then(res=> res.json())\r\n                .then(data=> {\r\n                    console.log(data)\r\n                    if (data.error) {\r\n                        M.toast({ html: data.error, classes: \"#ef9a9a red lighten-3\" })\r\n                    }\r\n                    else {\r\n                        M.toast({ html: \"Created Post successfully\", classes: \"#e91e63 pink\" })\r\n                        navigate('/postview')\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n           }\r\n    }, [url])\r\n    const postDetails = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"instagramclone\")\r\n        data.append(\"cloud_name\", \"daxiadpan\")\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/daxiadpan/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n       \r\n        }).then(res=> res.json())\r\n            .then(data=> {\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n         }\r\n    return (\r\n        <div className=\"card input-filed\"\r\n            style={{\r\n\r\n                margin: \"10px auto\",\r\n                maxWidth: \"500px\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\",\r\n                \"background-color\":\" #e6e6e6\"\r\n            }}\r\n        >\r\n\r\n                <div className=\"file-field input-field\">\r\n                <div className=\"btn \">\r\n                    <span>Choose a file</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <input type=\"text\" placeholder=\"Author\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"Location\" value={body} onChange={(e) => setBody(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n            \r\n            <button className='btn waves-effect waves-light #64b5f6 blue darken-1' onClick={() => postDetails()} >Submit POST</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Createpost;\r\n\r\n\r\n\r\n","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\landing-page.js",[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\reducers\\userReducer.js",[],[],[],"C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\SignIn.js",["77","78"],[],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst SignIn = () => {\r\n    const navigate = useNavigate();\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email\", classes: \"#e91e63 pink\" })\r\n            return\r\n        }\r\n        fetch(\"/signin\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            console.log(data)\r\n            if (data.error) {\r\n                M.toast({ html: data.error, classes: \"#ef9a9a red lighten-3\" })\r\n            } else {\r\n                localStorage.setItem(\"jwt\", data.token)\r\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n                M.toast({ html: \"signedin successfully\", classes: \"#e91e63 pink\" })\r\n                navigate('/postview')\r\n\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='mycard'>\r\n            <div className='card auth-card'>\r\n                <h2>Instaclone</h2>\r\n                <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <button className='btn waves-effect waves-light' onClick={() => PostData()}>Signin</button>\r\n                <h5>\r\n                    <Link to=\"signup\">Don't have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\Shyam\\Desktop\\instaclone_final\\client\\src\\components\\screens\\postview.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":14,"column":19,"nodeType":"81","messageId":"82","endLine":14,"endColumn":20,"suggestions":"83"},{"ruleId":"79","severity":1,"message":"80","line":14,"column":44,"nodeType":"81","messageId":"82","endLine":14,"endColumn":45,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":19,"nodeType":"81","messageId":"82","endLine":13,"endColumn":20,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":44,"nodeType":"81","messageId":"82","endLine":13,"endColumn":45,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":45,"column":8,"nodeType":"89","endLine":45,"endColumn":13,"suggestions":"90"},{"ruleId":"79","severity":1,"message":"80","line":14,"column":24,"nodeType":"81","messageId":"82","endLine":14,"endColumn":25,"suggestions":"91"},{"ruleId":"79","severity":1,"message":"80","line":14,"column":49,"nodeType":"81","messageId":"82","endLine":14,"endColumn":50,"suggestions":"92"},"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["93","94"],["95","96"],["97","98"],["99","100"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'body', 'description', 'navigate', and 'title'. Either include them or remove the dependency array.","ArrayExpression",["101"],["102","103"],["104","105"],{"messageId":"106","fix":"107","desc":"108"},{"messageId":"109","fix":"110","desc":"111"},{"messageId":"106","fix":"112","desc":"108"},{"messageId":"109","fix":"113","desc":"111"},{"messageId":"106","fix":"114","desc":"108"},{"messageId":"109","fix":"115","desc":"111"},{"messageId":"106","fix":"116","desc":"108"},{"messageId":"109","fix":"117","desc":"111"},{"desc":"118","fix":"119"},{"messageId":"106","fix":"120","desc":"108"},{"messageId":"109","fix":"121","desc":"111"},{"messageId":"106","fix":"122","desc":"108"},{"messageId":"109","fix":"123","desc":"111"},"removeEscape",{"range":"124","text":"125"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"126","text":"127"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"128","text":"125"},{"range":"129","text":"127"},{"range":"130","text":"125"},{"range":"131","text":"127"},{"range":"132","text":"125"},{"range":"133","text":"127"},"Update the dependencies array to be: [body, description, navigate, title, url]",{"range":"134","text":"135"},{"range":"136","text":"125"},{"range":"137","text":"127"},{"range":"138","text":"125"},{"range":"139","text":"127"},[370,371],"",[370,370],"\\",[395,396],[395,395],[322,323],[322,322],[347,348],[347,347],[1499,1504],"[body, description, navigate, title, url]",[402,403],[402,402],[427,428],[427,427]]